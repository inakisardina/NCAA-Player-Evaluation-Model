labs(title = "Number of Players with 30+ Saves Per Season",
x = "Season",
y = "Number of Players with 30+ Saves") +
theme_minimal()
View(thirtyplus_closers_perdecade)
View(thirtyplus_count_per_decade)
head(thirtyplus_count_per_decade)
ggplot(thirtyplus_count_per_decade, aes(x = Decade, y = Total_seasons)) +
geom_bar(stat = "identity", fill = "skyblue") +  # Bar plot
labs(title = "Total Number of Seasons with 30+ Saves Per Decade",
x = "Decade",
y = "Total Seasons with 30+ Saves") +
theme_minimal()
get_first_four_years <- function(decade_start) {
return((decade_start):(decade_start + 3))
}
decades <- seq(1960, 2010, by = 10)
filtered_data <- do.call(rbind, lapply(decades, function(decade_start) {
first_four_years <- get_first_four_years(decade_start)
subset(thirtyplus_count_perseason, Season %in% first_four_years)
}))
View(filtered_data)
ggplot(summary_data, aes(x = Decade, y = Total_players_with_30_SV)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Total Number of Players with 30+ Saves in the First Four Years of Each Decade",
x = "Decade",
y = "Total Players with 30+ Saves") +
theme_minimal()
filtered_data <- filtered_data %>%
mutate(Decade = paste0(floor(Season / 10) * 10, "s"))
summary_data <- filtered_data %>%
group_by(Decade) %>%
summarise(Total_players_with_30_SV = sum(players_with_30_SV))
print(summary_data)
ggplot(summary_data, aes(x = Decade, y = Total_players_with_30_SV)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Total Number of Players with 30+ Saves in the First Four Years of Each Decade",
x = "Decade",
y = "Total Players with 30+ Saves") +
theme_minimal()
View(filtered_data)
decades <- seq(1960, 2020, by = 10)
filtered_data <- do.call(rbind, lapply(decades, function(decade_start) {
+     first_four_years <- get_first_four_years(decade_start)
+     subset(thirtyplus_count_perseason, Season %in% first_four_years)
+ }))
filtered_data <- do.call(rbind, lapply(decades, function(decade_start) {
first_four_years <- get_first_four_years(decade_start)
subset(thirtyplus_count_perseason, Season %in% first_four_years) }))
filtered_data <- filtered_data %>%
+     mutate(Decade = paste0(floor(Season / 10) * 10, "s"))
filtered_data <- filtered_data %>%
mutate(Decade = paste0(floor(Season / 10) * 10, "s"))
summary_data <- filtered_data %>%
group_by(Decade) %>%
summarise(Total_players_with_30_SV = sum(players_with_30_SV))
ggplot(summary_data, aes(x = Decade, y = Total_players_with_30_SV)) +
+     geom_bar(stat = "identity", fill = "skyblue") +
+     labs(title = "Total Number of Players with 30+ Saves in the First Four Years of Each Decade",
+          x = "Decade",
ggplot(summary_data, aes(x = Decade, y = Total_players_with_30_SV)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Total Number of Players with 30+ Saves in the First Four Years of Each Decade",
x = "Decade",
y = "Total Players with 30+ Saves") +
theme_minimal()
decades <- seq(1961, 2021, by = 10)
filtered_data <- do.call(rbind, lapply(decades, function(decade_start) {
+ first_four_years <- get_first_four_years(decade_start)
+ subset(thirtyplus_count_perseason, Season %in% first_four_years) }))
filtered_data <- do.call(rbind, lapply(decades, function(decade_start) {
first_four_years <- get_first_four_years(decade_start)
subset(thirtyplus_count_perseason, Season %in% first_four_years) }))
filtered_data <- filtered_data %>%
mutate(Decade = paste0(floor(Season / 10) * 10, "s"))
summary_data <- filtered_data %>%
group_by(Decade) %>%
summarise(Total_players_with_30_SV = sum(players_with_30_SV))
ggplot(summary_data, aes(x = Decade, y = Total_players_with_30_SV)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Total Number of Players with 30+ Saves in the First Four Years of Each Decade",
x = "Decade",
y = "Total Players with 30+ Saves") +
theme_minimal()
filtered_data <- do.call(rbind, lapply(decades, function(decade_start) {
first_three_years <- get_first_three_years(decade_start)
subset(thirtyplus_count_perseason, Season %in% first_three_years) }))
View(get_first_four_years)
get_first_three_years <- function(decade_start) {
return((decade_start):(decade_start + 2))
}
filtered_data <- do.call(rbind, lapply(decades, function(decade_start) {
first_three_years <- get_first_three_years(decade_start)
subset(thirtyplus_count_perseason, Season %in% first_three_years) }))
filtered_data <- filtered_data %>%
mutate(Decade = paste0(floor(Season / 10) * 10, "s"))
summary_data <- filtered_data %>%
group_by(Decade) %>%
summarise(Total_players_with_30_SV = sum(players_with_30_SV))
ggplot(summary_data, aes(x = Decade, y = Total_players_with_30_SV)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Total Number of Players with 30+ Saves in the First Four Years of Each Decade",
x = "Decade",
y = "Total Players with 30+ Saves") +
theme_minimal()
ggplot(summary_data, aes(x = Decade, y = Total_players_with_30_SV)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Total Number of Players with 30+ Saves in the First three Years of Each Decade",
x = "Decade",
y = "Total Players with 30+ Saves") +
theme_minimal()
View(filtered_data)
View(forecast_arima)
View(future_seasons)
View(results)
View(season_counts)
View(average_saves_per_decade)
View(closers)
young_elite_closers_ungrouped_unfiltered <- closers %>% filter(Age <= 26)
View(young_elite_closers_ungrouped_unfiltered)
young_elite_closers_unfiltered <- young_elite_closers_ungrouped_unfiltered %>% group_by(Player)
View(young_elite_closers_ungrouped_unfiltered)
young_elite_closers_unfiltered <- young_elite_closers_ungrouped_unfiltered %>% group_by(Player) %>% summarise(Total_saves_26_oryounger = sum(SV))
View(young_elite_closers_unfiltered)
View(closers_2020s)
fortyplussaves <- closers %>% filter(SV >= 40)
fortyplussaves <- fortyplussaves %>% arrange(player, Season)
View(fortyplussaves)
fortyplussaves <- fortyplussaves %>% arrange(Player, Season)
fortyplussaves <- fortyplussaves %>%
group_by(Player) %>%
mutate(
Year_diff = c(0, diff(Season)),
Group = cumsum(Year_diff > 1)  # Group consecutive years
) %>%
group_by(Player, Group) %>%
summarise(Consecutive_Seasons = n()) %>%
ungroup()
players_with_3_or_more <- fortyplussaves %>%
filter(Consecutive_Seasons >= 3) %>%
distinct(Player)
View(players_with_3_or_more)
View(young_elite_closers_ungrouped_unfiltered)
View(young_elite_closers_unfiltered)
View(young_elite_closers_unfiltered)
View(average_saves_per_decade)
View(average_saves_per_decade)
View(best_2000s)
View(best_2010s)
View(best_2020s)
View(best_era_stretches)
View(best_four_year_stretch)
View(best_stretches)
View(best_four_year_stretch)
View(best_stretches)
View(best_three_year_stretch)
View(best_three_year_stretch)
View(closers)
View(closers_2000s)
View(closers_2010s)
View(closers_2020s)
View(closers_thirty_plus)
View(closers2024_thirtyplus_sv)
View(closers2024_twentyfiveplus_sv)
View(closers2024_twentyfiveplus_sv)
View(closers3_thirtyplus_sv)
View(data_projected_thrirtyplus_2020s)
View(data_projectedthirtyplus_perseason)
View(data_projectedthirtyplus_perseason)
View(data_with_three_year_saves)
View(decade_to_predict)
View(expected_slg)
View(filtered_data)
View(forecast_arima)
View(fortyplussaves)
View(fortyplussaves)
View(future_seasons)
View(lastyearsfiltered_15t24)
View(merged_data)
View(model)
View(model_arima)
View(model_poly)
View(output_data)
View(overall_best_stretch)
View(players_with_3_or_more)
View(results)
View(results)
View(results_adjusted)
View(results_arima)
View(results_poly)
View(season_count_per_decade)
View(season_count_per_decade)
View(season_counts)
View(season_counts)
View(season_count_per_decade)
View(season_counts)
View(season_count_per_decade)
View(season_counts)
View(seasoncount_projected_thrirtyplus_2020s)
View(summary_closers3_thirtyplus_sv)
View(summary_closers3_thirtyplus_sv)
View(summary_data)
View(summary_data)
View(thirtyplus_closers_perdecade)
View(thirtyplus_count_per_decade)
View(thirtyplus_count_perseason)
View(thirtyplus_count_perseason)
View(threeyear_stretch_sorted)
View(top_closer_per_decade)
View(total_saves_per_decade)
View(young_elite_closers_unfiltered)
View(young_elite_closers_ungrouped_unfiltered)
View(top_closer_per_decade)
View(threeyear_stretch_sorted)
View(thirtyplus_count_perseason)
View(closers2024_thirtyplus_sv)
View(closers2024_twentyfiveplus_sv)
View(thirtyplus_closers_perdecade)
View(thirtyplus_count_per_decade)
View(thirtyplus_count_perseason)
View(closers2024_twentyfiveplus_sv)
View(lastyearsfiltered_15t24)
View(overall_best_stretch)
View(players_with_3_or_more)
View(results)
View(results_adjusted)
View(season_count_per_decade)
View(season_counts)
View(top_closer_per_decade)
View(total_saves_per_decade)
View(young_elite_closers_unfiltered)
View(young_elite_closers_ungrouped_unfiltered)
View(thirtyplus_count_perseason)
View(thirtyplus_count_per_decade)
View(thirtyplus_closers_perdecade)
View(summary_data)
View(summary_closers3_thirtyplus_sv)
View(thirtyplus_closers_perdecade)
View(thirtyplus_count_per_decade)
View(thirtyplus_count_perseason)
View(get_first_four_years)
View(get_first_three_years)
View(season_counts)
View(season_count_per_decade)
View(seasoncount_projected_thrirtyplus_2020s)
View(thirtyplus_count_perseason)
head(thirtyplus_count_perseason)
get_first_three_years <- function(decade_start) {
return((decade_start):(decade_start + 2))
}
View(get_first_three_years)
result <- data.frame(Decade = integer(), Total_Players = integer(), stringsAsFactors = FALSE)
result <- data.frame(Decade = integer(), Total_Players = integer(), stringsAsFactors = FALSE)
# Loop through each decade
for (decade_start in decades) {
# Get the first three years of the decade
first_three_years <- get_first_three_years(decade_start)
# Filter the dataset for these years and calculate the total
total_players <- sum(thirtyplus_count_perseason$players_with_30_SV[
thirtyplus_count_perseason$Season %in% first_three_years
], na.rm = TRUE)
result <- rbind(result, data.frame(Decade = decade_start, Total_Players = total_players))
}
View(result)
View(closers_2020s)
View(closers)
View(young_elite_closers_ungrouped_unfiltered)
View(young_elite_closers_unfiltered)
View(young_elite_closers_ungrouped_unfiltered)
View(top_closer_per_decade)
View(closers)
View(thirtyplus_closers_perdecade)
View(thirtyplus_count_per_decade)
View(thirtyplus_count_perseason)
rm(average_saves_per_decade)
rm(best_2000s)
rm(best_three_year_stretch)
rm(list = ())
rm(list = ls())
setwd("/Users/kaks/Desktop/CanesBaseball/PitchingUltra")
# 1. Load and clean data
source("R/01_load_clean_data.R")
# cutter check
# 2. Calculate Pitching+
source("R/02_pitching_plus.R")
# 3. Estimate expected performance
source("R/03_xpitching_plus.R")
#chases
# 4. Classify pitcher types
source("R/04_pitcher_classification.R")
# 5. Final Pitching Ultra model
source("R/05_pitching_ultra_model.R")
source("R/06_visualizations.R")
source("R/07_generate_reports.R")
source("R/08_generate_single_report.R")
source("R/11_pitchers_ab_collapse.R")
source("R/12_pitcher_results_numbers.R")
generate_pitcher_report("Doyle, Liam")
results_table
View(pitcher_summary)
View(summary_table)
View(results_table)
View(pitcher_results)
doyle <- pitcher_results %>% filter(Pitcher == "Doyle, Liam")
View(doyle)
doyle <- pa_data_pitcher %>% filter(Pitcher == "Doyle Liam")
View(doyle)
View(pa_data_pitcher)
unique(pa_data_pitcher$PlayResult_clean)
unique(pa_data_pitcher$KorBB)
pitcher_results <- pa_data_pitcher %>%
mutate(
# Flag outcomes
Single = as.integer(PlayResult_clean == "Single"),
Double = as.integer(PlayResult_clean == "Double"),
Triple = as.integer(PlayResult_clean == "Triple"),
HR = as.integer(PlayResult_clean == "HomeRun"),
Hit = Single + Double + Triple + HR,
BB = as.integer(KorBB %in% c("Walk", "walk")),
HBP = as.integer(KorBB == "HitByPitch"),
K = as.integer(KorBB %in% c("Strikeout", "StrikeOut")),
Outs_minus_k = as.integer(PlayResult_clean %in% c("Out", "Sacrifice", "FieldersChoice")),
IP_numeric = Outs / 3,
PA = 1
) %>%
group_by(Pitcher, year) %>%
summarise(
G = n_distinct(GameID),
PA = sum(PA, na.rm = TRUE),
BB = sum(BB, na.rm = TRUE),
HBP = sum(HBP, na.rm = TRUE),
K = sum(K, na.rm = TRUE),
Hits = sum(Hit, na.rm = TRUE),
HR = sum(HR, na.rm = TRUE),
Outs = sum((Outs_minus_k +K), na.rm = TRUE),
IP_numeric = sum(IP_numeric, na.rm = TRUE),
IP_display = paste0(floor(sum(Outs, na.rm = TRUE) / 3), ".", sum(Outs, na.rm = TRUE) %% 3),
WHIP = ifelse(IP_numeric > 0, round((BB + HBP + Hits) / IP_numeric, 2), NA_real_),
BB_percent = round(100 * BB / PA, 1),
K_percent = round(100 * K / PA, 1),
FIP = ifelse(IP_numeric > 0, round(((13 * HR + 3 * (BB + HBP) - 2 * K) / IP_numeric) + 3.1, 2), NA_real_),
.groups = "drop"
)
source("R/12_pitcher_results_numbers.R")
doyle <- pa_data_pitcher %>% filter(Pitcher == "Doyle Liam")
View(doyle)
doyle <- pitcher_results %>% filter(Pitcher == "Doyle, Liam")
View(doyle)
source("R/12_pitcher_results_numbers.R")
source("R/12_pitcher_results_numbers.R")
doyle <- pitcher_results %>% filter(Pitcher == "Doyle, Liam")
View(doyle)
source("R/12_pitcher_results_numbers.R")
doyle <- pitcher_results %>% filter(Pitcher == "Doyle, Liam")
View(doyle)
source("R/12_pitcher_results_numbers.R")
doyle <- pitcher_results %>% filter(Pitcher == "Doyle, Liam")
View(doyle)
source("R/12_pitcher_results_numbers.R")
doyle <- pitcher_results %>% filter(Pitcher == "Doyle, Liam")
generate_pitcher_report("Burns, Chase")
generate_pitcher_report("Smith, Haagen")
generate_pitcher_report("Cijntje, Jurrangelo")
generate_pitcher_report("Smith, Hagen")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Walters, Brian")
generate_pitcher_report("Arnold, Jamie")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Lowder, Rhett")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
generate_pitcher_report("Hugus, Griffin")
colnames(clean_data)
View(clean_data)
source("R/04_counts.R")
ggplot(count_summary %>% filter(Pitcher == "Hugus, Griffin"),
aes(x = Count, y = WhiffRate)) +
geom_col(fill = "steelblue") +
labs(title = "Whiff Rate by Count – Hugus, Griffin",
x = "Count", y = "Whiff Rate") +
theme_minimal()
doyle <- clean_data %>% filter(Pitcher == "Doyle, Liam")
View(doyle)
ggplot(count_group_summary, aes(x = CountGroup, y = WhiffRate, fill = CountGroup)) +
geom_boxplot(alpha = 0.7) +
labs(
title = "Whiff Rate Comparison: 2-Strike vs. Hitter Counts",
x = "Count Group",
y = "Whiff Rate"
) +
theme_minimal() +
theme(legend.position = "none")
doyle <- count_summary %>% filter(Pitcher == "Doyle, Liam")
View(doyle)
ggplot(count_summary, aes(x = CountGroup, y = WhiffRate, fill = CountGroup)) +
geom_boxplot(alpha = 0.7) +
labs(
title = "Whiff Rate Comparison: 2-Strike vs. Hitter Counts",
x = "Count Group",
y = "Whiff Rate"
) +
theme_minimal() +
theme(legend.position = "none")
count_summary <- count_summary %>%
mutate(
CountGroup = case_when(
Count %in% c("2-0", "3-0", "3-1") ~ "Hitter Count",
Count %in% c("0-0", "1-1", "2-2") ~ "Neutral Count",
Count %in% c("0-1", "0-2", "1-2") ~ "Pitcher Count",
TRUE ~ "Other"
)
)
source("R/04_counts.R")
doyle <- count_behavior_summary %>% filter(Pitcher == "Doyle, Liam")
View(doyle)
ggplot(doyle, aes(x = FPS_percent, y = K_Rate_Behind)) +
geom_point() +
labs(
title = "First-Pitch Strike % vs K Rate After Falling Behind",
x = "First-Pitch Strike %",
y = "K After Falling Behind"
) +
theme_minimal()
generate_pitcher_report("Doyle, Liam")
hugus <- pitcher_summary%>% filter(Pitcher == "Hugus, Griffin")
View(hugus)
View(pitcher_info)
View(pitch_totals_yearly)
View(career_pitcher_stats)
View(pitcher_overall)
View(pitcher_overall)
View(pitcher_profiles_yearly)
View(pitcher_summary)
View(pitching_ultra)
hugus <- pitching_ultra %>% filter(Pitcher == "Hugus, Griffin")
print(hugus)
print(hugus)
source("R/04_counts.R")
doyle <- count_behavior_summary_by_year %>% filter(Pitcher == "Doyle, Liam")
View(doyle)
print(doyle)
source("R/04_counts.R")
source("R/04_counts.R")
doyle <- count_behavior_summary_by_year %>% filter(Pitcher == "Doyle, Liam")
View(doyle)
View(filtered_pitching_ultra)
generate_pitcher_report("Doyle, Liam")
generate_pitcher_report("Doyle, Liam")
generate_pitcher_report("Doyle, Liam")
generate_pitcher_report("Doyle, Liam")
generate_pitcher_report("Doyle, Liam")
generate_pitcher_report("Doyle, Liam")
generate_pitcher_report("Doyle, Liam")
source("R/04_counts.R")
anderson <- most_used_pitch_by_count %>% filter(Pitcher == "Anderson, Kade")
View(anderson)
arnold <- most_used_pitch_by_count %>% filter(Pitcher == "Arnold, Jamie")
View(arnold)
with <- most_used_pitch_by_count %>% filter(Pitcher == "Witherspoon, Kyson")
View(with)
bremner <- most_used_pitch_by_count %>% filter(Pitcher == "Bremner, Tyler")
View(bremner)
wood <- most_used_pitch_by_count %>% filter(Pitcher == "Wood, Gage")
View(wood)
wood <- most_used_pitch_by_count %>% filter(Pitcher == "Wood, Gage")
forbes <- most_used_pitch_by_count %>%  filter(Pitcher == "Forbes, Patrick")
quick <- most_used_pitch_by_count %>%  filter(Pitcher == "Quick, Riley")
eyanson <- most_used_pitch_by_count %>% filter(Pitcher == "Eyanson, Anthony")
View(wood)
View(forbes)
View(quick)
View(eyanson)
source("R/04_counts.R")
eyanson <- most_used_pitch_by_count %>% filter(Pitcher == "Eyanson, Anthony")
View(eyanson)
generate_pitcher_report("Quick, Riley")
generate_pitcher_report("Quick, Riley")
generate_pitcher_report("Quick, Riley")
generate_pitcher_report("Quick, Riley")
generate_pitcher_report("Quick, Riley")
generate_pitcher_report("Quick, Riley")
generate_pitcher_report("Quick, Riley")
generate_pitcher_report("Anderson, Kade")
generate_pitcher_report("Anderson, Kade")
generate_pitcher_report("Anderson, Kade")
generate_pitcher_report("Anderson, Kade")
